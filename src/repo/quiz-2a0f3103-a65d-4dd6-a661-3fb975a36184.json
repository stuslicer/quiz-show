{"id":"2a0f3103-a65d-4dd6-a661-3fb975a36184","name":"sealed classes","description":"sealed classes","difficulty":"simple","tags":[],"aiPromptUsed":"sealed classes","aiEngine":"openAI","model":"GPT_4_TURBO","generatedOn":"2024-06-06T10:17:35.6856002","lastUpdatedOn":"2024-06-06T10:17:35.6916014","questions":[{"number":1,"text":"What is the primary purpose of sealed classes in Java?","options":[{"text":"To enhance polymorphism","isCorrect":false,"explanation":"Sealed classes restrict polymorphism rather than enhance it, by controlling which classes can inherit from them."},{"text":"To provide more efficient memory usage","isCorrect":false,"explanation":"Sealed classes do not directly impact memory efficiency; they are more about controlling class hierarchies."},{"text":"To restrict class inheritance","isCorrect":true,"explanation":"Sealed classes are used to restrict which other classes can inherit from them, allowing the author to control the hierarchy tightly."},{"text":"To automatically implement interfaces","isCorrect":false,"explanation":"Sealed classes do not provide automatic implementation of interfaces."}]},{"number":2,"text":"Which keyword is used to declare a class as sealed in Java?","options":[{"text":"sealed","isCorrect":true,"explanation":"The 'sealed' keyword is used to declare a class as sealed, indicating that its subclasses are restricted."},{"text":"final","isCorrect":false,"explanation":"The 'final' keyword prevents any class from being subclassed but does not define a restricted subclassing as sealed classes do."},{"text":"static","isCorrect":false,"explanation":"The 'static' keyword is unrelated to controlling inheritance in the way sealed classes do."},{"text":"abstract","isCorrect":false,"explanation":"While 'abstract' classes cannot be instantiated, they do not restrict subclassing like sealed classes."}]},{"number":3,"text":"Which types of classes or interfaces can be declared as sealed?","options":[{"text":"Only final classes","isCorrect":false,"explanation":"Final classes cannot be sealed as they cannot be subclassed."},{"text":"Only abstract classes","isCorrect":false,"explanation":"Not only abstract, but non-final concrete classes can also be sealed."},{"text":"Any non-final class or interface","isCorrect":true,"explanation":null},{"text":"Only interfaces","isCorrect":false,"explanation":"Not only interfaces but also non-final classes can be sealed."}]},{"number":4,"text":"What must a sealed class provide for its subclasses?","options":[{"text":"An exhaustive list of all possible subclasses","isCorrect":true,"explanation":"A sealed class must enumerate all of its direct subclasses, ensuring that the set of subclasses is known at compile time."},{"text":"A default constructor","isCorrect":false,"explanation":"There is no requirement for sealed classes to provide a default constructor."},{"text":"Implementation of all methods","isCorrect":false,"explanation":"Sealed classes do not need to provide implementations for all methods, similar to abstract classes."},{"text":"Public visibility","isCorrect":false,"explanation":"Sealed classes are not required to be public; they can have any visibility."}]},{"number":5,"text":"How do you specify subclasses in the context of a sealed class?","options":[{"text":"Using the 'extends' keyword only","isCorrect":false,"explanation":"Simply using 'extends' is not sufficient; the subclasses must also be marked with 'final', 'sealed', or 'non-sealed'."},{"text":"By marking them with the 'sealed' keyword","isCorrect":false,"explanation":"Not all subclasses need to be sealed; they can also be final or non-sealed."},{"text":"By marking them as either final, sealed, or non-sealed","isCorrect":true,"explanation":"Subclasses of a sealed class must be explicitly declared as final, sealed, or non-sealed."},{"text":"By marking them with the 'final' keyword exclusively","isCorrect":false,"explanation":"While 'final' is one option, subclasses can also be sealed or non-sealed."}]},{"number":6,"text":"What happens if a sealed class does not list any subclasses?","options":[{"text":"It is treated as a final class","isCorrect":true,"explanation":"If a sealed class lists no subclasses, it effectively becomes final as no other classes can extend it."},{"text":"It is automatically an abstract class","isCorrect":false,"explanation":"Being sealed does not automatically make a class abstract."},{"text":"The compiler throws an error","isCorrect":false,"explanation":"The compiler does not throw an error; the class simply acts as a final class."},{"text":"It compiles but will run into issues at runtime","isCorrect":false,"explanation":"There are no runtime issues specifically due to not listing subclasses in a sealed class; it just behaves as a final class."}]}]}